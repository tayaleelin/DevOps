name: Deploy AKS
run-name: ${{ github.actor }} AKS Deployment

on: [push]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout TayaleeLin/DevOps
        uses: actions/checkout@v3
      - name: Checkout Azure/ResourceModules
        uses: actions/checkout@v3
        with:
          repository: Azure/ResourceModules
          path: ResourceModules
      - name: Create Resource Group
        uses: azure/CLI@v1
        with:
          azcliversion: 2.29.0
          inlineScript: |
            az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
            az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} 
            az group create --name ${{ secrets.AZURE_RESOURCE_GROUP }} --location ${{ secrets.AZURE_LOCATION }}
      - name: Deploy AKS Bicep
        uses: azure/arm-deploy@v1
        with:
          scope: resourceGroup
          resourceGroupName: ${{ secrets.AZURE_RESOURCE_GROUP }}
          template: ResourceModules/moduels/container-service/managed-clusters/main.bicep
          parameters: 'name=${{ secrets.AZURE_AKS_CLUSTER_NAME }} primaryAgentpoolProfile=[name="platform"] aksClusterKubernetesVersion=${{ secrets.AZURE_AKS_KUBERNETES_VERSION }} aadProfileAdminGroupObjectIDs=[${{ secrets.AZURE_AKS_AAD_ADMIN_GROUP_OBJECT_IDS }}]'
      # - name: Create AKS cluster
      #   uses: azure/CLI@v1
      #   with:
      #     azcliversion: 2.29.0
      #     inlineScript: |
      #       az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
      #       az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      #       az aks create --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
      #         --name ${{ secrets.AZURE_AKS_CLUSTER_NAME }} \
      #         --node-count 1 --enable-addons monitoring \
      #         --kubernetes-version  ${{ secrets.AZURE_AKS_KUBERNETES_VERSION }} \
      #         --enable-aad --aad-admin-group-object-ids ${{ secrets.AZURE_AKS_AAD_ADMIN_GROUP_OBJECT_IDS }} \
      #         --no-ssh-key
      # - name: Set context to AKS
      #   uses: azure/aks-set-context@v1
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}
      #     cluster-name: ${{ secrets.AZURE_AKS_CLUSTER_NAME }}
      #     resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }}
      # - name: Helm install Otomi on AKS
      #   uses: deliverybot/helm@v1
      #   with:
      #     release: otomi
      #     chart: otomi-core
      #     namespace: otomi-system
